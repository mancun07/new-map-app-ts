{"version":3,"sources":["components/Info.module.scss","components/Loader.module.scss","components/Marker.module.scss","components/Notification.module.scss","app/countrySlice.ts","components/Marker.tsx","app/actions.tsx","hooks/hooks.ts","components/Map.tsx","components/Header.tsx","components/Loader.tsx","components/Info.tsx","components/Notification.tsx","App.tsx","app/store.ts","index.js","components/Header.module.scss"],"names":["module","exports","countrySlice","createSlice","name","initialState","items","infoIsShown","chosenCountry","filteredItems","menuIsShown","loading","error","reducers","addDataToRedux","state","action","payload","showInfo","hideInfo","setChosenCountry","clearChosenCountry","filterByQuantity","filter","el","population","filterByLanguage","langs","languages","Object","values","includes","toggleMenu","setLoading","setError","countryActions","actions","Marker","props","dispatch","useDispatch","clickHandler","fetchSingleData","a","fetch","response","ok","Error","json","data","message","getSingleData","className","classes","marker","onClick","style","color","padding","useAppDispatch","useAppSelector","useSelector","Map","country","updatedItems","map","id","Math","random","updatedFilteredItems","itemsToMap","lat","latlng","lng","common","flag","flags","svg","filteredItemsToMap","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","Header","uniqueLanguages","arr","newArr","undefined","push","onlyUnique","slice","sort","b","language","unshift","header","hamb__button","navbar","navbar__isShown","navbar__item","htmlFor","onChange","e","value","target","Loader","Info","convertedNumbersPopulation","sideTraffic","numberWithSpaces","number","toString","replace","area","car","side","motion","div","initial","y","animate","info","title","src","alt","main","capital","i","length","currencies","symbol","Notification","notification","App","useEffect","fetchData","setTimeout","store","configureStore","reducer","countryReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf3208d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__OiQEZ\",\"title\":\"Info_title__2xD5L\",\"main\":\"Info_main__3rdEO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loader_loading__qCoMm\",\"lds-dual-ring\":\"Loader_lds-dual-ring__1WNOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marker\":\"Marker_marker__3oxfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__36URB\"};","import { createSlice } from '@reduxjs/toolkit'\r\nimport type { PayloadAction } from '@reduxjs/toolkit'\r\n\r\n// Define a type of slice\r\n\r\ninterface CountryState {\r\n    items: [],\r\n    infoIsShown: boolean,\r\n    chosenCountry: any,\r\n    filteredItems: any,\r\n    menuIsShown: boolean,\r\n    loading: boolean,\r\n    error: any\r\n}\r\n\r\nconst initialState:CountryState = {\r\n    items: [],\r\n    infoIsShown: false,\r\n    chosenCountry: null,\r\n    filteredItems: null,\r\n    menuIsShown: false,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const countrySlice = createSlice({\r\n    name: 'country',\r\n    initialState,\r\n    reducers: {\r\n        addDataToRedux: (state, action:PayloadAction<[]>) => {\r\n            state.items = action.payload\r\n        },\r\n        showInfo: (state) => {\r\n            state.infoIsShown = true\r\n        },\r\n        hideInfo: (state) => {\r\n            state.infoIsShown = false\r\n        },\r\n        setChosenCountry: (state, action:PayloadAction<[]>) => {\r\n            state.chosenCountry = action.payload\r\n        },\r\n        clearChosenCountry: (state) => {\r\n            state.chosenCountry = null\r\n        },\r\n        filterByQuantity: (state, action:PayloadAction<number>) => {\r\n            state.filteredItems = state.items.filter((el:any) => {\r\n                return el.population > action.payload\r\n            })\r\n        },\r\n        filterByLanguage: (state, action:PayloadAction<string>) => {\r\n    \r\n                state.filteredItems = state.items && state.items.filter((el:any) => {\r\n                    let langs = el.languages && Object.values(el.languages)\r\n             \r\n                    return langs && langs.includes(action.payload)\r\n                })\r\n        },\r\n        toggleMenu: (state) => {\r\n            state.menuIsShown = !state.menuIsShown\r\n        },\r\n        setLoading: (state, action:PayloadAction<boolean>) => {\r\n            state.loading = action.payload\r\n        },\r\n        setError: (state, action:PayloadAction<string|null>) => {\r\n            state.error = action.payload\r\n        }\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const countryActions = countrySlice.actions;\r\n\r\nexport default countrySlice.reducer;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux';\r\nimport { countryActions } from '../app/countrySlice';\r\nimport { getSingleData } from '../app/actions';\r\nimport classes from './Marker.module.scss'\r\n\r\nconst Marker:React.FC<{key:number, lat: number, lng: number, name:string, flag: string}> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const clickHandler = (name:string) => {\r\n        dispatch(countryActions.showInfo())\r\n        dispatch(getSingleData(name))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.marker} onClick={() => clickHandler(props.name)}>\r\n            <i className=\"fas fa-map-pin\" style={{color: 'yellow', padding: '10px'}}></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Marker\r\n","import {countryActions} from './countrySlice';\r\n\r\nexport const getData = () => {\r\n    return async (dispatch:any) => {\r\n\r\n        const fetchData = async () => {\r\n            dispatch(countryActions.setLoading(true))\r\n            const response = await fetch(`https://restcountries.com/v3.1/all`);\r\n            if (!response.ok) {\r\n                throw new Error('Извините, возникла ошибка. Попробуйте перезагрузить приложение.')\r\n            }\r\n            const data = await response.json();\r\n            dispatch(countryActions.addDataToRedux(data))\r\n            \r\n        }\r\n\r\n        try {\r\n            await fetchData();\r\n        } catch (err:any) {\r\n            dispatch(countryActions.setError(err.message))\r\n            setTimeout(() => {\r\n            dispatch(countryActions.setError(null))\r\n            }, 5000)\r\n        }\r\n        dispatch(countryActions.setLoading(false))\r\n\r\n    }\r\n}\r\n\r\nexport const getSingleData = (name:string) => {\r\n    return async (dispatch:any) => {\r\n\r\n        const fetchSingleData = async () => {\r\n            const response = await fetch(`https://restcountries.com/v3.1/name/${name}`);\r\n            if (!response.ok) {\r\n                throw new Error('Извините, возникла ошибка. Попробуйте перезагрузить приложение.')\r\n            }\r\n            const data = await response.json();\r\n            dispatch(countryActions.setChosenCountry(data))\r\n        }\r\n\r\n        try {\r\n            await fetchSingleData()\r\n        } catch (err: any) {\r\n            dispatch(countryActions.setError(err.message))\r\n        }\r\n    }\r\n}","import { useDispatch, useSelector } from 'react-redux'\r\nimport type { TypedUseSelectorHook } from 'react-redux'\r\nimport type { RootState, AppDispatch } from '../app/store'\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch: () => AppDispatch = useDispatch\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react';\r\nimport Marker from './Marker';\r\nimport { useAppSelector } from '../hooks/hooks'\r\n\r\nconst Map:React.FC = () => {\r\n\r\n  const items = useAppSelector(state => state.country.items)\r\n  const filteredItems = useAppSelector(state => state.country.filteredItems)\r\n\r\n  const updatedItems = items.map((el:any) => {\r\n    return {\r\n      ...el,\r\n      id: Math.random()\r\n    }\r\n  })\r\n\r\n  const updatedFilteredItems = filteredItems && filteredItems.map((el:any) => {\r\n    return {\r\n      ...el,\r\n      id: Math.random()\r\n    }\r\n  })\r\n\r\n  const itemsToMap = updatedItems.map((el:any) => {\r\n    return <Marker key={el.id}\r\n    lat={el.latlng[0]}\r\n    lng={el.latlng[1]}\r\n    name={el.name.common}\r\n    flag={el.flags.svg}\r\n  />\r\n})\r\n\r\n  const filteredItemsToMap = filteredItems && updatedFilteredItems.map((el:any) => {\r\n    return <Marker key={el.id}\r\n    lat={el.latlng[0]}\r\n    lng={el.latlng[1]}\r\n    name={el.name.common}\r\n    flag={el.flags.svg}\r\n  />\r\n})\r\n\r\n\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '100vh', width: '100%'}}>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: '' }}\r\n        defaultCenter={{lat: 59.95, lng: 30.33}}\r\n        defaultZoom={3}\r\n      >\r\n        {!filteredItems ? itemsToMap : filteredItemsToMap}\r\n\r\n      </GoogleMapReact>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Map\r\n","import React, {useState} from 'react'\r\nimport { countryActions } from '../app/countrySlice'\r\nimport classes from './Header.module.scss'\r\nimport { useAppSelector, useAppDispatch } from '../hooks/hooks'\r\n\r\nconst Header:React.FC = () => {\r\n\r\n    const items = useAppSelector((state) => state.country.items)\r\n    const menuIsShown = useAppSelector((state)=> state.country.menuIsShown)\r\n    const dispatch = useAppDispatch();\r\n    \r\n    const onChangeHandler = (value:number) => {\r\n        dispatch(countryActions.filterByQuantity(value))\r\n        dispatch(countryActions.toggleMenu())\r\n    }\r\n\r\n    const onChangeHandler2 = (value:string) => {\r\n        dispatch(countryActions.filterByLanguage(value))\r\n        dispatch(countryActions.toggleMenu())\r\n    }\r\n\r\n    const mobileMenuHandler = () => {\r\n        dispatch(countryActions.toggleMenu())\r\n    }\r\n\r\n    // получаем массив, состоящий только из языков, чтобы вывести в select языки\r\n    const onlyLanguages = items && items.map(el => {\r\n        const {languages} = el;\r\n        let arr = languages && Object.values(languages).slice(0,1)\r\n        let mainLanguage = arr && arr[0]\r\n        return mainLanguage\r\n    })\r\n\r\n\r\n    const onlyUnique = (arr: string[]) => {\r\n        let newArr:string[] =  [];\r\n        for (const el of arr) {\r\n            if (!newArr.includes(el) && el !== undefined) {\r\n                newArr.push(el)\r\n            }\r\n        }\r\n        return newArr\r\n    }\r\n\r\n    // оставляем только уникальные языки в массиве\r\n    const uniqueLanguages = onlyUnique(onlyLanguages)\r\n    .sort((a, b) => {\r\n        return a > b ? 1 : -1\r\n    })\r\n    .map(el => {\r\n        return {\r\n            language: el,\r\n            id: Math.random()\r\n        }\r\n    })\r\n\r\n    uniqueLanguages.unshift({language: 'Все языки', id: Math.random()})\r\n\r\n    return (\r\n        <div className={classes.header}>\r\n            <h2>Узнай основные факты о стране (всего одним кликом!)</h2>\r\n            <div className={classes.hamb__button} onClick={mobileMenuHandler}></div>\r\n            <div className={`${classes.navbar} ${menuIsShown && classes.navbar__isShown}`}>\r\n                <div className={classes.navbar__item}>\r\n                    <label htmlFor=\"population\">Показать на карте страны с численностью населения:</label>\r\n                    <select name=\"population\" id=\"population\" onChange={(e => onChangeHandler(+(e.target.value)))}>\r\n                        <option value={0}>Все страны</option>\r\n                        <option value={10000000}>Более 10млн человек</option>\r\n                        <option value={30000000}>Более 30млн человек</option>\r\n                        <option value={50000000}>Более 50млн человек</option>\r\n                        <option value={70000000}>Более 70млн человек</option>\r\n                        <option value={100000000}>Более 100млн человек</option>\r\n                    </select>\r\n                </div>\r\n                <div className={classes.navbar__item}>\r\n                    <label htmlFor=\"language\">Показать на карте страны, в которых выбранный ниже язык, является официальным:</label>\r\n                    <select  name=\"language\" id=\"language\" onChange={e => onChangeHandler2(e.target.value)}>\r\n                    {uniqueLanguages && uniqueLanguages.map((el) => {\r\n                        return (\r\n                            <option key={el.id} value={el.language}>{el.language}</option>\r\n                        )\r\n                    })}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport classes from './Loader.module.scss'\r\n\r\nconst Loader:React.FC = () => {\r\n    return (\r\n        <div className={classes.loading}>\r\n            <div className={classes[`lds-dual-ring`]}> </div>\r\n            <h2>Подождите, идет загрузка...</h2>            \r\n           \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, {Fragment} from 'react'\r\nimport { countryActions } from '../app/countrySlice'\r\nimport { motion } from 'framer-motion'\r\nimport classes from './Info.module.scss'\r\nimport { useAppSelector, useAppDispatch } from '../hooks/hooks'\r\n\r\nconst Info:React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const chosenCountry = useAppSelector(state => state.country.chosenCountry)\r\n\r\n    const clickHandler = () => {\r\n        dispatch(countryActions.hideInfo())\r\n        dispatch(countryActions.clearChosenCountry())\r\n    }\r\n\r\n    const numberWithSpaces = (number:number) => {\r\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\r\n    }\r\n\r\n    let convertedNumbersPopulation;\r\n    let sideTraffic; \r\n    let convertedTotalArea;\r\n\r\n    if (chosenCountry) {\r\n        convertedNumbersPopulation = numberWithSpaces(chosenCountry[0].population);\r\n        convertedTotalArea = numberWithSpaces(chosenCountry[0].area);\r\n        if (chosenCountry[0].car.side === 'right') {\r\n            sideTraffic = 'Правостороннее'\r\n        } else {\r\n            sideTraffic = 'Левостороннее'\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        { chosenCountry && \r\n        <motion.div initial={{y: '-100vh'}} animate={{y: 0}} className={classes.info}>\r\n       <div className={classes.title}>\r\n           <div>{chosenCountry[0].name.common}</div> \r\n           <p>Данные на 2020г.</p>\r\n           <img src={chosenCountry[0].flags.svg} alt={'Flag'}/>\r\n        </div>\r\n       <div className={classes.main}>\r\n            <div>Столица: {chosenCountry[0].capital}</div>\r\n            <div>Население: {convertedNumbersPopulation} чел.</div>\r\n            {/* <div>Площадь: {(convertedTotalArea === '-1') ? 'Нет данных'  : (convertedTotalArea + ' км2')}</div> */}\r\n            <div>Движение: {sideTraffic}</div>\r\n            <div>Официальные языки в стране: {Object.values(chosenCountry[0].languages)\r\n            .map((el:any,i, arr) => { \r\n                return i !== arr.length - 1 ? <span key={i}>{el}{', '}</span> : <span key={i}>{el}</span>\r\n            })}</div>\r\n            <div>Валюта: {Object.values(chosenCountry[0].currencies).map((el:any, i) => {\r\n                return <span key={i}>{el.name}({el.symbol})</span>\r\n            })}</div>\r\n       </div>\r\n            <button onClick={clickHandler}>Скрыть</button>\r\n        </motion.div>  }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React from 'react'\r\nimport classes from './Notification.module.scss'\r\nimport { motion } from 'framer-motion'\r\n\r\nconst Notification:React.FC<{error:any}> = (props) => {\r\n\r\n    return (\r\n        <motion.div initial={{y: '-100vh'}} animate={{y: 0}} className={classes.notification}>\r\n            {props.error}\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, {useEffect} from 'react';\r\nimport Map from './components/Map';\r\nimport Header from './components/Header';\r\nimport Loader from './components/Loader';\r\nimport Info from './components/Info';\r\nimport {getData} from './app/actions'\r\nimport Notification from './components/Notification';\r\nimport { useAppSelector, useAppDispatch } from './hooks/hooks'\r\n\r\nfunction App() {\r\n    const infoIsShown = useAppSelector(state => state.country.infoIsShown)\r\n    const loading = useAppSelector(state => state.country.loading)\r\n    const error = useAppSelector(state => state.country.error)\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n      dispatch(getData());\r\n  }, [dispatch])\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header/>\r\n      {loading && <Loader />}\r\n      <Map/>\r\n      {infoIsShown && <Info/>}\r\n      {error && <Notification error={error} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport countryReducer from './countrySlice'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n      country: countryReducer\r\n  },\r\n})\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1GWNh\",\"hamb__button\":\"Header_hamb__button__2lDne\",\"navbar\":\"Header_navbar__38QNS\",\"navbar__item\":\"Header_navbar__item__1v8Us\",\"navbar__isShown\":\"Header_navbar__isShown__3GsOJ\"};"],"sourceRoot":""}